basePath: /api
definitions:
  requests.AuthLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  requests.AuthRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  requests.CategoryRequest:
    properties:
      description:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      slug:
        type: string
    type: object
  requests.ChangeStatusCategoryDto:
    properties:
      is_active:
        type: string
    type: object
  requests.PostRequest:
    properties:
      category_id:
        type: integer
      content:
        type: string
      is_active:
        type: boolean
      slug:
        type: string
      summary:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  requests.TagRequest:
    properties:
      name:
        type: string
    type: object
  requests.UpdateCategoryRequest:
    properties:
      description:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      slug:
        type: string
    type: object
  requests.UserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AuthRequest'
      responses: {}
      tags:
      - Auth
  /auth/info:
    get:
      consumes:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AuthLoginRequest'
      responses: {}
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      responses: {}
      tags:
      - Auth
  /category:
    get:
      consumes:
      - application/json
      responses: {}
      tags:
      - Category
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.CategoryRequest'
      responses: {}
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      tags:
      - Category
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      tags:
      - Category
    put:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateCategoryRequest'
      responses: {}
      tags:
      - Category
  /category/{id}/change-status:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.ChangeStatusCategoryDto'
      responses: {}
      tags:
      - Category
  /post:
    get:
      consumes:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - Post
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.PostRequest'
      responses: {}
      tags:
      - Post
  /post/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      tags:
      - Post
    get:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      tags:
      - Post
    put:
      consumes:
      - application/json
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.PostRequest'
      responses: {}
      tags:
      - Post
  /swagger:
    get:
      consumes:
      - application/json
      description: Description
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Summary
      tags:
      - example
  /tag:
    get:
      consumes:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - '[Tag]'
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.TagRequest'
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - '[Tag]'
  /tag/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - '[Tag]'
    get:
      consumes:
      - application/json
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - '[Tag]'
    put:
      consumes:
      - application/json
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.TagRequest'
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - '[Tag]'
  /users:
    get:
      consumes:
      - application/json
      responses: {}
      tags:
      - User
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UserRequest'
      responses: {}
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: USER ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: USER ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: USER ID
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UserRequest'
      responses: {}
      tags:
      - User
  /v1/admin/info:
    get:
      consumes:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      tags:
      - '[Admin]'
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
